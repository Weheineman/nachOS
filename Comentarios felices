EJERCICIO 1
- Ver que varios threads que accedan en simultaneo a distintos archivos no se molesten.

EJERCICIO 5
Vamos a tener que implementarnos vectors propios. Vamos a necesitar eso para la tabla de Directory, que ahora tiene que ser extensible (Gracias C++ por no tener un resize de new y delete).
La estructura de directorios para soporte de concurrencia parece bastante similar a los archivos abiertos:
	- Cada thread aporta un incremento al contador de un directorio
	- Para realizar operaciones de directorios (crear, eliminar, moverse) se necesita un acceso a la lista de directorios.
	- Hay algunos caveats a las operaciones. Por ejemplo: Para eliminar un directorio no basta con que ese directorio no esté abierto, sino también no tiene que estar abierto ninguno de sus hijos.
Cosas a implementar como mínimo: mkdir, rmdir, cd. Para cada directorio vamos a necesitar saber su daddy para poder movernos para arriba. Probablemente varias operaciones de OpenFile ahora necesiten saber la posición en el árbol de directorios :)

Roadmap
 - exception.cc tiene la implementacion de las syscalls. Hay que agregar mkdir?

 - Integrar directory y filesystem, hay que hacerle saber al filesys si debe
 crear un directorio o no, mkdir es igual a create pero tiene true el isDirectory.
